{% extends "base.html.jinja" %}
{% block subtitle %}About{% endblock %}

{% block body %}

<h1>About HTTPSWatch</h1>

<h2>Ratings</h2>
<p>HTTPSWatch assigns every tracked site a rating approximating the quality of its HTTPS support. If a verified TLS connection cannot be established or no page can be loaded over TLS, the site is given the <span class="site-grade-bad">Bad</span> rating. The <span class="site-grade-mediocre">Mediocre</span> rating means a TLS connection can be established but there are quality issues with the site&rsquo;s implementation of HTTPS (e.g. the HTTP site doesn&rsquo;t redirect to HTTPS or the <code>Strict-Transport-Security</code> header isn&rsquo;t set). If everything looks good, a <span class="site-grade-good">Good</span> rating is given.

<h2>Limitations</h2>
<p>Some sites which HTTPSWatch rates as <span class="site-grade-mediocre">Mediocre</span> are actually unusable in a browser. This is mostly due to <a href="https://developer.mozilla.org/en-US/docs/Security/MixedContent">mixed content</a>, which HTTPSWatch doesn&rsquo;t always detect.
<p>Aside from the basic hostname verification checks, HTTPSWatch doesn&rsquo;t attempt to evaluate the quality of the TLS connection. However, the grade the <a href="https://www.ssllabs.com/ssltest/">SSL Labs server TLS testing tool</a> assigns is provided for each site.

<h2>Site Curation</h2>
<p>Obviously, it&rsquo;s not practical to list every university or news site in the world. HTTPSWatch&rsquo;s goal is to list several representative sites for each category. Usually these are the most popular sites, so HTTPS support on them affects the most users. The hope is that if the sites listed here have high quality HTTPS implementations, the others will follow. Each category should not exceed 20-30 sites.

<h2>How to Properly Setup HTTPS</h2>
<p>There&rsquo;s a lot of information on the web about this, which may be found by searching. Here are a few pointers:
  <ul class="simple-list">
    <li>The <a href="https://www.eff.org/https-everywhere/deploying-https">EFF&rsquo;s guide</a> is a good starting place.
    <li>SSL Labs has extensive information about <a href="https://www.ssllabs.com/projects/best-practices/">TLS deployment best practices</a>.
    <li><a href="https://18f.gsa.gov/">18F</a> has information about their TLS deployment standards including reusable nginx configuration files <a href="https://github.com/18F/tls-standards">on GitHub</a>.
  </ul>

<h2>Code</h2>
<p>The code is available on <a href="https://github.com/gutworth/httpswatch">GitHub</a> and pull requests are welcome. Join us on <a href="https://freenode.net">Freenode&rsquo;s</a> <code>#httpswatch</code> channel for discussion.

<h2>Credits</h2>
<p>HTTPSWatch was originally created by Benjamin Peterson. <a href="https://github.com/gutworth/httpswatch/graphs/contributors">Contributors around the world</a> now help maintain it.

<p>We&rsquo;re grateful to <a href="https://www.qualys.com/">Qualys</a> and <a href="http://blog.ivanristic.com/">Ivan RistiÄ‡</a> for providing the excellent <a href="https://www.ssllabs.com/ssltest/">SSL Server Test</a> and allowing us to include its results on HTTPSWatch.

<p>HTTPSWatch was inspired by Alex Gaynor&rsquo;s <a href="https://alexgaynor.net/2014/nov/12/state-of-news-tls/">blog</a> <a href="https://alexgaynor.net/2014/dec/30/state-of-news-tls-part-ii/">posts</a> about news sites&rsquo; HTTPS support.

{% endblock %}
